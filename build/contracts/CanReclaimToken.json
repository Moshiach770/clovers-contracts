{
  "contractName": "CanReclaimToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104ef806100536000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc3201461005c5780638da5cb5b14610095578063f2fde38b146100ea575b600080fd5b341561006757600080fd5b610093600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610123565b005b34156100a057600080fd5b6100a8610283565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100f557600080fd5b610121600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102a8565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561018057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561021a57600080fd5b5af1151561022757600080fd5b50505060405180519050905061027f6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166103fd9092919063ffffffff16565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561030357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561033f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561049f57600080fd5b5af115156104ac57600080fd5b5050506040518051905015156104be57fe5b5050505600a165627a7a723058207824281b62b8bc447b36bd688da487fc43044859f6376380a3267294aab434160029",
  "deployedBytecode": "0x606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806317ffc3201461005c5780638da5cb5b14610095578063f2fde38b146100ea575b600080fd5b341561006757600080fd5b610093600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610123565b005b34156100a057600080fd5b6100a8610283565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100f557600080fd5b610121600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102a8565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561018057600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561021a57600080fd5b5af1151561022757600080fd5b50505060405180519050905061027f6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166103fd9092919063ffffffff16565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561030357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561033f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561049f57600080fd5b5af115156104ac57600080fd5b5050506040518051905015156104be57fe5b5050505600a165627a7a723058207824281b62b8bc447b36bd688da487fc43044859f6376380a3267294aab434160029",
  "sourceMap": "397:353:15:-;;;509:10:18;501:5;;:18;;;;;;;;;;;;;;;;;;397:353:15;;;;;;",
  "deployedSourceMap": "397:353:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:149:15;663:15;653:5:18;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;681:5:15;:15;;;697:4;681:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:39;;708:34;727:5;;;;;;;;;;;734:7;708:5;:18;;;;:34;;;;;:::i;:::-;598:149;;:::o;238:20:18:-;;;;;;;;;;;;;:::o;832:169::-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;965:8;937:37;;958:5;;;;;;;;;;;937:37;;;;;;;;;;;;988:8;980:5;;:16;;;;;;;;;;;;;;;;;;832:169;:::o;368:120:23:-;457:5;:14;;;472:2;476:5;457:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:33;;;;;;368:120;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"./Ownable.sol\";\nimport \"../token/ERC20/ERC20Basic.sol\";\nimport \"../token/ERC20/SafeERC20.sol\";\n\n\n/**\n * @title Contracts that should be able to recover tokens\n * @author SylTi\n * @dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\n * This will prevent any accidental loss of tokens.\n */\ncontract CanReclaimToken is Ownable {\n  using SafeERC20 for ERC20Basic;\n\n  /**\n   * @dev Reclaim all ERC20Basic compatible tokens\n   * @param token ERC20Basic The address of the token contract\n   */\n  function reclaimToken(ERC20Basic token) external onlyOwner {\n    uint256 balance = token.balanceOf(this);\n    token.safeTransfer(owner, balance);\n  }\n\n}\n",
  "sourcePath": "zeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
  "ast": {
    "absolutePath": "zeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        9902
      ]
    },
    "id": 9903,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9871,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:15"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 9872,
        "nodeType": "ImportDirective",
        "scope": 9903,
        "sourceUnit": 10019,
        "src": "26:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "file": "../token/ERC20/ERC20Basic.sol",
        "id": 9873,
        "nodeType": "ImportDirective",
        "scope": 9903,
        "sourceUnit": 10224,
        "src": "50:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 9874,
        "nodeType": "ImportDirective",
        "scope": 9903,
        "sourceUnit": 10286,
        "src": "90:38:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 9875,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10018,
              "src": "425:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10018",
                "typeString": "contract Ownable"
              }
            },
            "id": 9876,
            "nodeType": "InheritanceSpecifier",
            "src": "425:7:15"
          }
        ],
        "contractDependencies": [
          10018
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\n@author SylTi\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\nThis will prevent any accidental loss of tokens.",
        "fullyImplemented": true,
        "id": 9902,
        "linearizedBaseContracts": [
          9902,
          10018
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9879,
            "libraryName": {
              "contractScope": null,
              "id": 9877,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10285,
              "src": "443:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$10285",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "437:31:15",
            "typeName": {
              "contractScope": null,
              "id": 9878,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10223,
              "src": "457:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 9900,
              "nodeType": "Block",
              "src": "657:90:15",
              "statements": [
                {
                  "assignments": [
                    9887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9887,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 9901,
                      "src": "663:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9886,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "663:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9892,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9890,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11988,
                        "src": "697:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9902",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9902",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9888,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "681:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10205,
                      "src": "681:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "663:39:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9896,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9966,
                        "src": "727:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9897,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9887,
                        "src": "734:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9893,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "708:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10245,
                      "src": "708:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$10223_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$10223_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 9898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9899,
                  "nodeType": "ExpressionStatement",
                  "src": "708:34:15"
                }
              ]
            },
            "documentation": "@dev Reclaim all ERC20Basic compatible tokens\n@param token ERC20Basic The address of the token contract",
            "id": 9901,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 9884,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9883,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9992,
                  "src": "647:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:9:15"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9881,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 9901,
                  "src": "620:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9880,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10223,
                    "src": "620:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "619:18:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 9885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:15"
            },
            "scope": 9902,
            "src": "598:149:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9903,
        "src": "397:353:15"
      }
    ],
    "src": "0:751:15"
  },
  "legacyAST": {
    "absolutePath": "zeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        9902
      ]
    },
    "id": 9903,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9871,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:15"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 9872,
        "nodeType": "ImportDirective",
        "scope": 9903,
        "sourceUnit": 10019,
        "src": "26:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "file": "../token/ERC20/ERC20Basic.sol",
        "id": 9873,
        "nodeType": "ImportDirective",
        "scope": 9903,
        "sourceUnit": 10224,
        "src": "50:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 9874,
        "nodeType": "ImportDirective",
        "scope": 9903,
        "sourceUnit": 10286,
        "src": "90:38:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 9875,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10018,
              "src": "425:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10018",
                "typeString": "contract Ownable"
              }
            },
            "id": 9876,
            "nodeType": "InheritanceSpecifier",
            "src": "425:7:15"
          }
        ],
        "contractDependencies": [
          10018
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\n@author SylTi\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\nThis will prevent any accidental loss of tokens.",
        "fullyImplemented": true,
        "id": 9902,
        "linearizedBaseContracts": [
          9902,
          10018
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9879,
            "libraryName": {
              "contractScope": null,
              "id": 9877,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10285,
              "src": "443:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$10285",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "437:31:15",
            "typeName": {
              "contractScope": null,
              "id": 9878,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10223,
              "src": "457:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 9900,
              "nodeType": "Block",
              "src": "657:90:15",
              "statements": [
                {
                  "assignments": [
                    9887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9887,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 9901,
                      "src": "663:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9886,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "663:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9892,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9890,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11988,
                        "src": "697:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9902",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9902",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9888,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "681:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10205,
                      "src": "681:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "663:39:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9896,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9966,
                        "src": "727:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9897,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9887,
                        "src": "734:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9893,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9881,
                        "src": "708:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10245,
                      "src": "708:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$10223_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$10223_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 9898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9899,
                  "nodeType": "ExpressionStatement",
                  "src": "708:34:15"
                }
              ]
            },
            "documentation": "@dev Reclaim all ERC20Basic compatible tokens\n@param token ERC20Basic The address of the token contract",
            "id": 9901,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 9884,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9883,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9992,
                  "src": "647:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:9:15"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9881,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 9901,
                  "src": "620:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9880,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10223,
                    "src": "620:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$10223",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "619:18:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 9885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:15"
            },
            "scope": 9902,
            "src": "598:149:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9903,
        "src": "397:353:15"
      }
    ],
    "src": "0:751:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-16T20:44:54.079Z"
}