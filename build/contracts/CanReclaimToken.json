{
  "contractName": "CanReclaimToken",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a031916331790556104a1806100256000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166317ffc3208114610066578063715018a6146100965780638da5cb5b146100ab578063f2fde38b146100e9575b600080fd5b34801561007257600080fd5b5061009473ffffffffffffffffffffffffffffffffffffffff60043516610117565b005b3480156100a257600080fd5b5061009461020a565b3480156100b757600080fd5b506100c061029b565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100f557600080fd5b5061009473ffffffffffffffffffffffffffffffffffffffff600435166102b7565b6000805473ffffffffffffffffffffffffffffffffffffffff16331461013c57600080fd5b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905173ffffffffffffffffffffffffffffffffffffffff8416916370a082319160248083019260209291908290030181600087803b1580156101aa57600080fd5b505af11580156101be573d6000803e3d6000fd5b505050506040513d60208110156101d457600080fd5b50516000549091506102069073ffffffffffffffffffffffffffffffffffffffff84811691168363ffffffff6102e716565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461022e57600080fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a2600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102db57600080fd5b6102e4816103c6565b50565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b505050506040513d60208110156103b457600080fd5b505115156103c157600080fd5b505050565b73ffffffffffffffffffffffffffffffffffffffff811615156103e857600080fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820a4724a733bb74d048c7f59e5c59cb7260af9632e4c95d36eb658256e33f452750029",
  "deployedBytecode": "0x6080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166317ffc3208114610066578063715018a6146100965780638da5cb5b146100ab578063f2fde38b146100e9575b600080fd5b34801561007257600080fd5b5061009473ffffffffffffffffffffffffffffffffffffffff60043516610117565b005b3480156100a257600080fd5b5061009461020a565b3480156100b757600080fd5b506100c061029b565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100f557600080fd5b5061009473ffffffffffffffffffffffffffffffffffffffff600435166102b7565b6000805473ffffffffffffffffffffffffffffffffffffffff16331461013c57600080fd5b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905173ffffffffffffffffffffffffffffffffffffffff8416916370a082319160248083019260209291908290030181600087803b1580156101aa57600080fd5b505af11580156101be573d6000803e3d6000fd5b505050506040513d60208110156101d457600080fd5b50516000549091506102069073ffffffffffffffffffffffffffffffffffffffff84811691168363ffffffff6102e716565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461022e57600080fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a2600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102db57600080fd5b6102e4816103c6565b50565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b505050506040513d60208110156103b457600080fd5b505115156103c157600080fd5b505050565b73ffffffffffffffffffffffffffffffffffffffff811615156103e857600080fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820a4724a733bb74d048c7f59e5c59cb7260af9632e4c95d36eb658256e33f452750029",
  "sourceMap": "397:353:15:-;;;567:5:18;:18;;-1:-1:-1;;;;;;567:18:18;575:10;567:18;;;397:353:15;;;;;;",
  "deployedSourceMap": "397:353:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:149;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;598:149:15;;;;;;;;;1001:111:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:18;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:18;;;;;;;;;;;;;;;;;;;;;;;1274:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:18;;;;;;;598:149:15;663:15;719:5:18;;;;705:10;:19;697:28;;;;;;681:21:15;;;;;;697:4;681:21;;;;;;:15;;;;;;:21;;;;;;;;;;;;;;-1:-1:-1;681:15:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;681:21:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;681:21:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;681:21:15;727:5;;681:21;;-1:-1:-1;708:34:15;;727:5;708:18;;;;727:5;681:21;708:34;:18;:34;:::i;:::-;598:149;;:::o;1001:111:18:-;719:5;;;;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;1077:5;;;;;1058:25;;;1105:1;1089:18;;;;;;1001:111::o;238:20::-;;;;;;:::o;1274:103::-;719:5;;;;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;368:121:25:-;458:5;:14;;;473:2;477:5;458:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;458:25:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;458:25:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;458:25:25;450:34;;;;;;;;368:121;;;:::o;1512:171:18:-;1582:23;;;;;1574:32;;;;;;1638:5;;;1617:38;;;;;;;1638:5;;;1617:38;;;1661:5;:17;;;;;;;;;;;;;;;1512:171::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./Ownable.sol\";\nimport \"../token/ERC20/ERC20Basic.sol\";\nimport \"../token/ERC20/SafeERC20.sol\";\n\n\n/**\n * @title Contracts that should be able to recover tokens\n * @author SylTi\n * @dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\n * This will prevent any accidental loss of tokens.\n */\ncontract CanReclaimToken is Ownable {\n  using SafeERC20 for ERC20Basic;\n\n  /**\n   * @dev Reclaim all ERC20Basic compatible tokens\n   * @param token ERC20Basic The address of the token contract\n   */\n  function reclaimToken(ERC20Basic token) external onlyOwner {\n    uint256 balance = token.balanceOf(this);\n    token.safeTransfer(owner, balance);\n  }\n\n}\n",
  "sourcePath": "zeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
  "ast": {
    "absolutePath": "zeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        9882
      ]
    },
    "id": 9883,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9851,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:15"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 9852,
        "nodeType": "ImportDirective",
        "scope": 9883,
        "sourceUnit": 10030,
        "src": "26:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "file": "../token/ERC20/ERC20Basic.sol",
        "id": 9853,
        "nodeType": "ImportDirective",
        "scope": 9883,
        "sourceUnit": 10306,
        "src": "50:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 9854,
        "nodeType": "ImportDirective",
        "scope": 9883,
        "sourceUnit": 10474,
        "src": "90:38:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9855,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10029,
              "src": "425:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10029",
                "typeString": "contract Ownable"
              }
            },
            "id": 9856,
            "nodeType": "InheritanceSpecifier",
            "src": "425:7:15"
          }
        ],
        "contractDependencies": [
          10029
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\n@author SylTi\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\nThis will prevent any accidental loss of tokens.",
        "fullyImplemented": true,
        "id": 9882,
        "linearizedBaseContracts": [
          9882,
          10029
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9859,
            "libraryName": {
              "contractScope": null,
              "id": 9857,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10473,
              "src": "443:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$10473",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "437:31:15",
            "typeName": {
              "contractScope": null,
              "id": 9858,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10305,
              "src": "457:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 9880,
              "nodeType": "Block",
              "src": "657:90:15",
              "statements": [
                {
                  "assignments": [
                    9867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9867,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 9881,
                      "src": "663:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9866,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "663:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9872,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9870,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11962,
                        "src": "697:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9882",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9882",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9868,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9861,
                        "src": "681:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10287,
                      "src": "681:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "663:39:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9876,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9947,
                        "src": "727:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9877,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9867,
                        "src": "734:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9873,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9861,
                        "src": "708:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10433,
                      "src": "708:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$10305_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$10305_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 9878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9879,
                  "nodeType": "ExpressionStatement",
                  "src": "708:34:15"
                }
              ]
            },
            "documentation": "@dev Reclaim all ERC20Basic compatible tokens\n@param token ERC20Basic The address of the token contract",
            "id": 9881,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 9864,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9863,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9977,
                  "src": "647:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:9:15"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9861,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "620:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9860,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10305,
                    "src": "620:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "619:18:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 9865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:15"
            },
            "scope": 9882,
            "src": "598:149:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9883,
        "src": "397:353:15"
      }
    ],
    "src": "0:751:15"
  },
  "legacyAST": {
    "absolutePath": "zeppelin-solidity/contracts/ownership/CanReclaimToken.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        9882
      ]
    },
    "id": 9883,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9851,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:15"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 9852,
        "nodeType": "ImportDirective",
        "scope": 9883,
        "sourceUnit": 10030,
        "src": "26:23:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol",
        "file": "../token/ERC20/ERC20Basic.sol",
        "id": 9853,
        "nodeType": "ImportDirective",
        "scope": 9883,
        "sourceUnit": 10306,
        "src": "50:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "../token/ERC20/SafeERC20.sol",
        "id": 9854,
        "nodeType": "ImportDirective",
        "scope": 9883,
        "sourceUnit": 10474,
        "src": "90:38:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9855,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10029,
              "src": "425:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10029",
                "typeString": "contract Ownable"
              }
            },
            "id": 9856,
            "nodeType": "InheritanceSpecifier",
            "src": "425:7:15"
          }
        ],
        "contractDependencies": [
          10029
        ],
        "contractKind": "contract",
        "documentation": "@title Contracts that should be able to recover tokens\n@author SylTi\n@dev This allow a contract to recover any ERC20 token received in a contract by transferring the balance to the contract owner.\nThis will prevent any accidental loss of tokens.",
        "fullyImplemented": true,
        "id": 9882,
        "linearizedBaseContracts": [
          9882,
          10029
        ],
        "name": "CanReclaimToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9859,
            "libraryName": {
              "contractScope": null,
              "id": 9857,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10473,
              "src": "443:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$10473",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "437:31:15",
            "typeName": {
              "contractScope": null,
              "id": 9858,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10305,
              "src": "457:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                "typeString": "contract ERC20Basic"
              }
            }
          },
          {
            "body": {
              "id": 9880,
              "nodeType": "Block",
              "src": "657:90:15",
              "statements": [
                {
                  "assignments": [
                    9867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9867,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 9881,
                      "src": "663:15:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9866,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "663:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9872,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9870,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11962,
                        "src": "697:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9882",
                          "typeString": "contract CanReclaimToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CanReclaimToken_$9882",
                          "typeString": "contract CanReclaimToken"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9868,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9861,
                        "src": "681:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10287,
                      "src": "681:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 9871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "663:39:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9876,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9947,
                        "src": "727:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9877,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9867,
                        "src": "734:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9873,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9861,
                        "src": "708:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 9875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10433,
                      "src": "708:18:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Basic_$10305_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Basic_$10305_$",
                        "typeString": "function (contract ERC20Basic,address,uint256)"
                      }
                    },
                    "id": 9878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9879,
                  "nodeType": "ExpressionStatement",
                  "src": "708:34:15"
                }
              ]
            },
            "documentation": "@dev Reclaim all ERC20Basic compatible tokens\n@param token ERC20Basic The address of the token contract",
            "id": 9881,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 9864,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9863,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9977,
                  "src": "647:9:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:9:15"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9861,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "620:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                    "typeString": "contract ERC20Basic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9860,
                    "name": "ERC20Basic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10305,
                    "src": "620:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Basic_$10305",
                      "typeString": "contract ERC20Basic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "619:18:15"
            },
            "payable": false,
            "returnParameters": {
              "id": 9865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:15"
            },
            "scope": 9882,
            "src": "598:149:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 9883,
        "src": "397:353:15"
      }
    ],
    "src": "0:751:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-08-28T09:56:30.085Z"
}